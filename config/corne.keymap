/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

&mt {
    flavor = "tap-preferred";
    tapping-term-ms = <200>;
};

 / {

     behaviors {
         th_tap: homerow_mods {
             compatible = "zmk,behavior-hold-tap";
             label = "Home Row Mods";
             #binding-cells = <2>;
             tapping-term-ms = <200>;
             quick-tap-ms = <0>;
             flavor = "tap-preferred";
             bindings = <&kp A>, <&kp S>;
         };

         gqt: global-quick-tap {
             compatible = "zmk,behavior-hold-tap";
             label = "GLOBAL_QUICK_TAP";
             #binding-cells = <2>;
             flavor = "tap-preferred";
             tapping-term-ms = <200>;
             quick-tap-ms = <125>;
             bindings = <&kp A>, <&kp S>;
         };
     };

     keymap {
         compatible = "zmk,keymap";

         default_layer {
             bindings = <
                 &gqt &kp RSHIFT &kp TAB,  &kp Q, &kp W, &kp E, &kp R, &kp T,  &kp Y, &kp U, &kp I, &kp O, &kp P, &gqt &kp RSHIFT &kp TAB,
                 &kp LCTRL, &kp A, &kp S, &th_tap &kp LALT &kp D, &th_tap &kp LGUI &kp F, &kp G,  &kp H, &th_tap &kp LGUI &kp J, &th_tap &kp RALT &kp K, &kp L, &kp DOT, &th_tap &kp DQT &kp SQT,
                 &kp LGUI, &kp Z, &kp X, &kp C, &kp V, &kp B,  &kp N, &kp M, &kp COMMA, &th_tap &kp SEMI &kp COLON, &th_tap &kp EXCL &kp QMARK, &kp ESC,
                 &mo 1, &kp LSHIFT, &gqt &kp LC &kp LS &kp LALT &kp SPACE, &gqt &kp NAV &kp RET, &kp BSPC, &kp DEL
             >;
         };

         lower_layer {
             bindings = <
                 &kp TAB,  &kp LPAR,  &kp RPAR,  &kp DQT,  &kp PSCRN,  &kp C_PP,  &kp STAR,  &kp N1,  &kp N2, &kp N3,  &kp FSLH, &kp RALT,
                 &kp LCTRL, &kp AT, &kp AMPS,  &kp PRCNT, &kp FSLH, &kp UNDER,   &kp PLUS, &kp N4, &kp N5, &kp N6, &kp DOT, &trans,
                 &trans,  &kp CARET, &kp HASH, &kp DLLR, &kp EQUAL, &kp TILDE,  &kp MINUS, &kp N7,  &kp N8, &kp N9,  &kp N0, &trans,
                 &mo 1,  &kp LSHIFT, &kp SPACE, &kp RET, &kp BSPC, &mo 2
             >;
         };

         raise_layer {
             bindings = <
                 &kp TAB,  &kp LBKT, &kp RBKT, &kp LBRC, &kp RBRC, &kp F15,  &kp C_VOL_UP, &trans,  &kp UP, &trans, &trans, &bt BT_CLR,
                 &trans, &trans, &trans, &trans, &trans, &kp F14,  &kp C_VOL_DN, &kp LEFT, &kp DOWN,  &kp RIGHT, &trans, &bt BT_SEL 0,
                 &kp LSHIFT, &trans,   &trans, &trans,   &trans,   &trans,  &kp C_BRI_DN, &trans,  &kp RBKT,  &kp RBRC, &kp PIPE, &bt BT_NXT,
                 &kp LGUI, &trans,   &kp SPACE,   &kp RET,   &trans,    &kp BSPC
             >;
         };

         nav_layer {
             bindings = <
                 &kp TAB,  &kp LBKT, &kp RBKT, &kp LBRC, &kp RBRC, &kp F15,  &kp C_VOL_UP, &kp LEFT,  &kp UP, &kp RIGHT, &kp BSPC, &bt BT_CLR,
                 &trans, &trans, &trans, &trans, &trans, &kp F14,  &kp C_VOL_DN, &kp LEFT, &kp DOWN,  &kp RIGHT, &trans, &bt BT_SEL 0,
                 &kp LSHIFT, &trans,   &trans, &trans,   &trans,   &trans,  &kp C_BRI_DN, &trans,  &kp RBKT,  &kp RBRC, &kp PIPE, &bt BT_NXT,
                 &kp LGUI, &trans,   &kp SPACE,   &kp RET,   &trans,    &kp BSPC
             >;
         };
     };
 };
